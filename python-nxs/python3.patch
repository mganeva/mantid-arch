diff --git a/nxs/napi.py b/nxs/napi.py
index 88dcbe7..b80870a 100755
--- a/nxs/napi.py
+++ b/nxs/napi.py
@@ -371,7 +371,7 @@ class NeXus(object):
         self.handle = c_void_p(None)
         self._path = []
         self._indata = False
-        status = nxlib.nxiopen_(filename,mode,_ref(self.handle))
+        status = nxlib.nxiopen_(filename.encode(),mode,_ref(self.handle))
         if status == ERROR:
             if mode in [ACC_READ, ACC_RDWR]:
                 op = 'open'
@@ -418,7 +418,7 @@ class NeXus(object):
             mode = ACC_READ
         else:
             mode = ACC_RDWR
-        status = nxlib.nxiopen_(self.filename,mode,_ref(self.handle))
+        status = nxlib.nxiopen_(self.filename.encode(),mode,_ref(self.handle))
         if status == ERROR:
             raise NeXusError("Could not open %s" % (self.filename))
         self._path = []
diff --git a/nxs/tree.py b/nxs/tree.py
index 6b4365e..1ed6e77 100644
--- a/nxs/tree.py
+++ b/nxs/tree.py
@@ -240,8 +240,8 @@ from __future__ import with_statement
 from copy import copy, deepcopy
 
 import numpy as np
-import napi
-from napi import NeXusError
+from . import napi
+from .napi import NeXusError
 
 #Memory in MB
 NX_MEMORY = 500
@@ -792,7 +792,7 @@ class NXobject(object):
         displayed. If 'recursive' is True, the contents of child groups are
         also displayed.
         """
-        print self._str_tree(attrs=attrs,recursive=recursive)
+        print(self._str_tree(attrs=attrs,recursive=recursive))
 
     @property
     def tree(self):
@@ -1823,7 +1823,7 @@ class PylabPlotter(object):
                 for _dim in data.shape[2:]:
                     slab.append(0)
                 data = data[slab].view().reshape(data.shape[:2])
-                print "Warning: Only the top 2D slice of the data is plotted"
+                print("Warning: Only the top 2D slice of the data is plotted")
 
             x = axis_data[0]
             y = axis_data[1]
@@ -3240,7 +3240,7 @@ usage: %s cmd [args]
     ls *.nxs
     plot file.nxs entry.data
         """%(argv[0],)
-        print usage
+        print(usage)
 
 
 if __name__ == "__main__":
diff --git a/nxs/unit.py b/nxs/unit.py
index 1bcf807..db2d612 100644
--- a/nxs/unit.py
+++ b/nxs/unit.py
@@ -181,7 +181,7 @@ class Converter(object):
             raise KeyError("%s not in %s"%(units," ".join(self.scalemap.keys())))
 
 def _check(expect,get):
-    if expect != get: raise ValueError, "Expected %s but got %s"%(expect,get)
+    if expect != get: raise ValueError("Expected %s but got %s"%(expect,get))
     #print expect,"==",get
 
 def test():
